import disnake
from disnake.ext import commands

class MinecraftServerManager(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: server_status
    @commands.slash_command(name="server_status", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Minecraft-—Å–µ—Ä–≤–µ—Ä–∞.")
    async def server_status(self, interaction: disnake.ApplicationCommandInteraction):
        status = "Minecraft-—Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç üéÆ\n–ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: 5/20."
        await interaction.response.send_message(f"```
{status}
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: start_server
    @commands.slash_command(name="start_server", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å Minecraft-—Å–µ—Ä–≤–µ—Ä.")
    async def start_server(self, interaction: disnake.ApplicationCommandInteraction):
        await interaction.response.send_message("```
–ó–∞–ø—É—Å–∫–∞—é Minecraft-—Å–µ—Ä–≤–µ—Ä... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. ‚è≥
```")
        # –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        await interaction.followup.send("```
Minecraft-—Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! ‚úÖ
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: stop_server
    @commands.slash_command(name="stop_server", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Minecraft-—Å–µ—Ä–≤–µ—Ä.")
    async def stop_server(self, interaction: disnake.ApplicationCommandInteraction):
        await interaction.response.send_message("```
–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Minecraft-—Å–µ—Ä–≤–µ—Ä... üõë
```")
        # –°–∏–º—É–ª—è—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        await interaction.followup.send("```
Minecraft-—Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. ‚ùå
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: send_command
    @commands.slash_command(name="send_command", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ Minecraft-—Å–µ—Ä–≤–µ—Ä.")
    async def send_command(self, interaction: disnake.ApplicationCommandInteraction, command: str):
        await interaction.response.send_message(f"```
–û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É: {command}
```")
        # –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        result = f"–ö–æ–º–∞–Ω–¥–∞ '{command}' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ."
        await interaction.followup.send(f"```
{result}
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: server_console
    @commands.slash_command(name="server_console", description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∫–æ–Ω—Å–æ–ª–∏ Minecraft-—Å–µ—Ä–≤–µ—Ä–∞.")
    async def server_console(self, interaction: disnake.ApplicationCommandInteraction):
        console_output = (
            "[12:00:00] [Server thread/INFO]: Starting Minecraft server...\n"
            "[12:00:01] [Server thread/INFO]: Preparing spawn area...\n"
            "[12:00:05] [Server thread/INFO]: Done (4.123s)! For help, type 'help'."
        )
        await interaction.response.send_message(f"```
{console_output}
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: whitelist
    @commands.slash_command(name="whitelist", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º Minecraft-—Å–µ—Ä–≤–µ—Ä–∞.")
    async def whitelist(self, interaction: disnake.ApplicationCommandInteraction, action: str, username: str):
        actions = ["add", "remove", "list"]
        if action not in actions:
            await interaction.response.send_message("```
–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (add, remove, list).
```")
            return

        if action == "add":
            result = f"–ò–≥—Ä–æ–∫ {username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫. ‚úÖ"
        elif action == "remove":
            result = f"–ò–≥—Ä–æ–∫ {username} —É–¥–∞–ª–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞. ‚ùå"
        elif action == "list":
            result = "–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: Player1, Player2, Player3."

        await interaction.response.send_message(f"```
{result}
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: backup_server
    @commands.slash_command(name="backup_server", description="–°–¥–µ–ª–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Å–µ—Ä–≤–µ—Ä–∞.")
    async def backup_server(self, interaction: disnake.ApplicationCommandInteraction):
        await interaction.response.send_message("```
–°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Å–µ—Ä–≤–µ—Ä–∞... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. ‚è≥
```")
        # –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
        await interaction.followup.send("```
–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! ‚úÖ
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: restore_backup
    @commands.slash_command(name="restore_backup", description="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏.")
    async def restore_backup(self, interaction: disnake.ApplicationCommandInteraction):
        await interaction.response.send_message("```
–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–µ—Ä–≤–µ—Ä –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. ‚è≥
```")
        # –°–∏–º—É–ª—è—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        await interaction.followup.send("```
–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏! ‚úÖ
```")

    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞: server_players
    @commands.slash_command(name="server_players", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
    async def server_players(self, interaction: disnake.ApplicationCommandInteraction):
        players = ["Player1", "Player2", "Player3"]
        player_list = ", ".join(players)
        await interaction.response.send_message(f"```
–ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω ({len(players)}): {player_list}
```")

def setup(bot):
    bot.add_cog(MinecraftServerManager(bot))
